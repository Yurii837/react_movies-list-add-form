{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","addMovie","newMovie","useState","setMovie","errors","setErrors","currentValid","setCurrentValid","urlRegex","handleChange","event","target","name","value","isValid","Object","values","every","e","useEffect","onSubmit","preventDefault","type","onChange","onBlur","errorMessage","placeholder","autoComplete","length","test","disabled","App","state","moviesFromServer","setState","prevSt","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c6f5815a.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, {\n  useEffect,\n  useState,\n} from 'react';\nimport './NewMovie.scss';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ addMovie }) => {\n  const newMovie = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  const [movie, setMovie] = useState(newMovie);\n  const [errors, setErrors] = useState({\n    ...newMovie,\n    description: 'toInitialValidate',\n  });\n  const [currentValid, setCurrentValid] = useState(false);\n  // eslint-disable-next-line\n  const urlRegex = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n  const handleChange = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n  ) => {\n    const { name, value } = event.target;\n\n    setMovie({ ...movie, [name]: value });\n  };\n\n  const validateTitle = () => {\n    let errorMessage = '';\n\n    if (!movie.title) {\n      errorMessage = 'Type title';\n    }\n\n    setErrors({\n      ...errors,\n      title: errorMessage,\n    });\n\n    return errorMessage;\n  };\n\n  const validateImdbUrl = () => {\n    let errorMessage = '';\n\n    if (!movie.imdbUrl) {\n      errorMessage = 'Type ImdbUrl';\n    } else if (!urlRegex.test(movie.imdbUrl)) {\n      errorMessage = 'Incorrect URL';\n    }\n\n    setErrors({\n      ...errors,\n      imdbUrl: errorMessage,\n    });\n\n    return errorMessage;\n  };\n\n  const validateImgUrl = () => {\n    let errorMessage = '';\n\n    if (!movie.imgUrl) {\n      errorMessage = 'Type ImgUrl';\n    } else if (!urlRegex.test(movie.imgUrl)) {\n      errorMessage = 'Incorrect URL';\n    }\n\n    setErrors({\n      ...errors,\n      imgUrl: errorMessage,\n    });\n\n    return errorMessage;\n  };\n\n  const validateImdbId = () => {\n    let errorMessage = '';\n\n    if (!movie.imdbId) {\n      errorMessage = 'Type ImdbId';\n    }\n\n    setErrors({\n      ...errors,\n      imdbId: errorMessage,\n      description: errorMessage,\n    });\n\n    return errorMessage;\n  };\n\n  const isValid: ()=> boolean = () => {\n    const errorsArr = Object.values(errors);\n\n    return errorsArr.every(e => !e);\n  };\n\n  useEffect(() => {\n    setCurrentValid(isValid);\n  });\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (isValid()) {\n      addMovie(movie);\n      setMovie(newMovie);\n    }\n  };\n\n  return (\n    <>\n      <h2 className=\"form-title\">Add Film Form</h2>\n      <form\n        className=\"form\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"form__input-wrapper\">\n          <input\n            className=\"form__input\"\n            type=\"text\"\n            name=\"title\"\n            value={movie.title}\n            onChange={handleChange}\n            onBlur={validateTitle}\n            placeholder=\"Film title\"\n            autoComplete=\"off\"\n          />\n          {errors.title.length > 0\n            && <p className=\"form__error-message\">{errors.title}</p>}\n        </div>\n\n        <div className=\"form__input-wrapper\">\n          <textarea\n            className=\"form__input\"\n            name=\"description\"\n            value={movie.description}\n            onChange={handleChange}\n            placeholder=\"About new film\"\n            autoComplete=\"off\"\n          />\n        </div>\n\n        <div className=\"form__input-wrapper\">\n          <input\n            className=\"form__input\"\n            type=\"text\"\n            name=\"imgUrl\"\n            value={movie.imgUrl}\n            onChange={handleChange}\n            onBlur={validateImgUrl}\n            placeholder=\"https://imgUrl/example.jpg\"\n            autoComplete=\"off\"\n          />\n          {errors.imgUrl.length > 0\n            && <p className=\"form__error-message\">{errors.imgUrl}</p>}\n        </div>\n\n        <div className=\"form__input-wrapper\">\n          <input\n            className=\"form__input\"\n            type=\"text\"\n            name=\"imdbUrl\"\n            value={movie.imdbUrl}\n            onChange={handleChange}\n            onBlur={validateImdbUrl}\n            placeholder=\"https://www.imdb.com/title/tt1375666\"\n            autoComplete=\"off\"\n          />\n          {errors.imdbUrl.length > 0\n            && <p className=\"form__error-message\">{errors.imdbUrl}</p>}\n        </div>\n\n        <div className=\"form__input-wrapper\">\n          <input\n            className=\"form__input\"\n            type=\"text\"\n            name=\"imdbId\"\n            value={movie.imdbId}\n            onChange={handleChange}\n            onBlur={validateImdbId}\n            placeholder=\"tt1375666\"\n            autoComplete=\"off\"\n          />\n          {errors.imdbId.length > 0\n            && <p className=\"form__error-message\">{errors.imdbId}</p>}\n        </div>\n\n        <button\n          type=\"submit\"\n          className=\"form__button\"\n          disabled={!currentValid}\n        >\n          Add new film\n        </button>\n      </form>\n    </>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (newMovie: Movie) => {\n    this.setState(prevSt => ({\n      movies: [...prevSt.movies, newMovie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}